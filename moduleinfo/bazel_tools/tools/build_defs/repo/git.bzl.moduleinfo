
à
git_repositoryÎClone an external git repository.

Clones a Git repository, checks out the specified tag, or commit, and
makes its targets available for binding. Also determine the id of the
commit actually checked out and its date, and return a dict with parameters
that provide a reproducible version of this rule (which a tag not necessarily
is).
.
name"A unique name for this repository. z
branchjbranch in the remote repository to checked out. Precisely one of branch, tag, or commit must be specified.2""m
commit]specific commit to be checked out. Precisely one of branch, tag, or commit must be specified.2""J
init_submodules.Whether to clone submodules in the repository.2FalseÖ

patch_args¼The arguments given to the patch tool. Defaults to -p0, however -p1 will usually be needed for patches generated by git. If multiple -p arguments are specified, the last one will take effect.If arguments other than -p are specified, Bazel will fall back to use patch command line tool instead of the Bazel-native patch implementation. When falling back to patch command line tool and patch_tool attribute is not specified, `patch` will be used.2["-p0"]e

patch_cmdsQSequence of Bash commands to be applied on Linux/Macos after patches are applied.2[]×
patch_cmds_win¾Sequence of Powershell commands to be applied on Windows after patches are applied. If this attribute is not set, patch_cmds will be executed on Windows, which requires Bash binary to exist.2[] 

patch_tool‹The patch(1) utility to use. If this is specified, Bazel will use the specifed patch tool instead of the Bazel-native patch implementation.2""ï
patchesÝA list of files that are to be applied as patches after extracting the archive. By default, it uses the Bazel-native patch implementation which doesn't support fuzz match and binary patch, but Bazel will fall back to use patch command line tool if `patch_tool` attribute is specified or there are arguments other than `-p` in `patch_args` attribute.2[]2
remote$The URI of the remote Git repository ­
repo_mapping˜A dictionary from local repository name to global repository name. This allows controls over workspace dependency resolution for dependencies of this repository.<p>For example, an entry `"@foo": "@bar"` declares that, for any time this repository depends on `@foo` (such as a dependency on `@foo//some:target`, it should actually resolve that dependency within globally-declared `@bar` (`@bar//some:target`).
 «
shallow_since“an optional date, not after the specified commit; the argument is not allowed if a tag is specified (which allows cloning with depth 1). Setting such a date close to the specified commit allows for a more shallow clone of the repository, saving bandwidth and wall-clock time.2""K
strip_prefix5A directory prefix to strip from the extracted files.2""t
taggtag in the remote repository to checked out. Precisely one of branch, tag, or commit must be specified.2""
verbose2False
Ú
new_git_repositoryÎClone an external git repository.

Clones a Git repository, checks out the specified tag, or commit, and
makes its targets available for binding. Also determine the id of the
commit actually checked out and its date, and return a dict with parameters
that provide a reproducible version of this rule (which a tag not necessarily
is).
.
name"A unique name for this repository. z
branchjbranch in the remote repository to checked out. Precisely one of branch, tag, or commit must be specified.2""ñ

build_fileÚThe file to use as the BUILD file for this repository.This attribute is an absolute label (use '@//' for the main repo). The file does not need to be named BUILD, but can be (something like BUILD.new-repo-name may work well for distinguishing it from the repository's actual BUILD files. Either build_file or build_file_content must be specified.2NoneŠ
build_file_contentnThe content for the BUILD file for this repository. Either build_file or build_file_content must be specified.2""m
commit]specific commit to be checked out. Precisely one of branch, tag, or commit must be specified.2""J
init_submodules.Whether to clone submodules in the repository.2FalseÖ

patch_args¼The arguments given to the patch tool. Defaults to -p0, however -p1 will usually be needed for patches generated by git. If multiple -p arguments are specified, the last one will take effect.If arguments other than -p are specified, Bazel will fall back to use patch command line tool instead of the Bazel-native patch implementation. When falling back to patch command line tool and patch_tool attribute is not specified, `patch` will be used.2["-p0"]e

patch_cmdsQSequence of Bash commands to be applied on Linux/Macos after patches are applied.2[]×
patch_cmds_win¾Sequence of Powershell commands to be applied on Windows after patches are applied. If this attribute is not set, patch_cmds will be executed on Windows, which requires Bash binary to exist.2[] 

patch_tool‹The patch(1) utility to use. If this is specified, Bazel will use the specifed patch tool instead of the Bazel-native patch implementation.2""ï
patchesÝA list of files that are to be applied as patches after extracting the archive. By default, it uses the Bazel-native patch implementation which doesn't support fuzz match and binary patch, but Bazel will fall back to use patch command line tool if `patch_tool` attribute is specified or there are arguments other than `-p` in `patch_args` attribute.2[]2
remote$The URI of the remote Git repository ­
repo_mapping˜A dictionary from local repository name to global repository name. This allows controls over workspace dependency resolution for dependencies of this repository.<p>For example, an entry `"@foo": "@bar"` declares that, for any time this repository depends on `@foo` (such as a dependency on `@foo//some:target`, it should actually resolve that dependency within globally-declared `@bar` (`@bar//some:target`).
 «
shallow_since“an optional date, not after the specified commit; the argument is not allowed if a tag is specified (which allows cloning with depth 1). Setting such a date close to the specified commit allows for a more shallow clone of the repository, saving bandwidth and wall-clock time.2""K
strip_prefix5A directory prefix to strip from the extracted files.2""t
taggtag in the remote repository to checked out. Precisely one of branch, tag, or commit must be specified.2""
verbose2False·
workspace_fileœThe file to use as the `WORKSPACE` file for this repository. Either `workspace_file` or `workspace_file_content` can be specified, or neither, but not both.2None¸
workspace_file_content—The content for the WORKSPACE file for this repository. Either `workspace_file` or `workspace_file_content` can be specified, or neither, but not both.2""*,Rules for cloning external git repositories.