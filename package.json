{
	"name": "bazel-stack-vscode",
	"displayName": "bazel-stack-vscode",
	"description": "Bazel Support for Visual Studio Code",
	"version": "0.3.4",
	"publisher": "StackBuild",
	"license": "Apache-2.0",
	"icon": "stackb-full.png",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/stackb/bazel-stack-vscode.git"
	},
	"keywords": [
		"bazel"
	],
	"author": "stack.build authors",
	"bugs": {
		"url": "https://github.com/stackb/bazel-stack-vscode/issues"
	},
	"homepage": "https://github.com/stackb/bazel-stack-vscode#readme",
	"categories": [
		"Programming Languages",
		"Snippets"
	],
	"activationEvents": [
		"onLanguage:bazel",
		"onLanguage:starlark",
		"onLanguage:bazelrc"
	],
	"engines": {
		"vscode": "^1.47.0"
	},
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Bzl",
			"properties": {
				"feature.buildifier.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Feature flag to enable (checked) or disable (unchecked)"
				},
				"feature.buildifier.verbose": {
					"type": "number",
					"default": 0,
					"markdownDescription": "The verbosity level for extra diagnostics"
				},
				"feature.buildifier.github-release": {
					"type": "string",
					"default": "3.4.0",
					"markdownDescription": "The github release tag of the Buildifier release to download"
				},
				"feature.buildifier.github-owner": {
					"type": "string",
					"default": "bazelbuild",
					"markdownDescription": "The github owner for the buildifier repository"
				},
				"feature.buildifier.github-repo": {
					"type": "string",
					"default": "buildtools",
					"markdownDescription": "The github repo name for the buildifier repository"
				},
				"feature.buildifier.executable": {
					"type": "string",
					"markdownDescription": "Path to a pre-installed buildifier executable.\n\n If set, this prevents downloading a buildifier binary from github"
				},
				"feature.buildifier.fix-on-format": {
					"type": "boolean",
					"default": true,
					"description": "Whether to automatically apply lint fixes from buildifier when formatting a Bazel file."
				},
				"feature.bazeldoc.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Feature flag to enable (checked) or disable (unchecked)"
				},
				"feature.bazeldoc.verbose": {
					"type": "number",
					"default": 0,
					"markdownDescription": "The verbosity level for extra diagnostics"
				},
				"feature.bazeldoc.base-url": {
					"type": "string",
					"default": "https://docs.bazel.build/versions/master",
					"markdownDescription": "The base-url of the documentation site"
				}
			}
		},
		"grammars": [
			{
				"language": "starlark",
				"scopeName": "source.starlark",
				"path": "./syntaxes/starlark.tmLanguage.json"
			},
			{
				"language": "bazel",
				"scopeName": "source.bazel",
				"path": "./syntaxes/bazel.tmLanguage.json"
			},
			{
				"language": "bazelrc",
				"scopeName": "source.bazelrc",
				"path": "./syntaxes/bazelrc.tmLanguage.json"
			}
		],
		"languages": [
			{
				"id": "starlark",
				"aliases": [
					"Starlark",
					"starlark"
				],
				"extensions": [
					".sky",
					".star"
				],
				"configuration": "./syntaxes/starlark.configuration.json"
			},
			{
				"id": "bazel",
				"aliases": [
					"Bazel"
				],
				"extensions": [
					".BUILD",
					".bazel",
					".WORKSPACE",
					".bzl"
				],
				"filenames": [
					"BUILD",
					"BUILD.bazel",
					"WORKSPACE",
					"WORKSPACE.bazel"
				],
				"configuration": "./syntaxes/bazel.configuration.json"
			},
			{
				"id": "bazelrc",
				"aliases": [
					"Bazelrc"
				],
				"extensions": [
					".bazelrc"
				],
				"filenames": [
					"bazelrc"
				],
				"configuration": "./syntaxes/bazelrc.configuration.json"
			}
		],
		"snippets": [
			{
				"language": "bazel",
				"path": "./snippets/bazel.json"
			}
		]
	},
	"main": "./out/extension.js",
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"dependencies": {
		"@octokit/rest": "18.0.3",
		"fs-extra": "9.0.1",
		"request": "2.88.2"
	},
	"devDependencies": {
		"@octokit/types": "5.2.0",
		"@types/chai": "4.2.12",
		"@types/fs-extra": "9.0.1",
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"@types/request": "2.48.5",
		"@types/sinon": "9.0.4",
		"@types/vscode": "^1.47.0",
		"@typescript-eslint/eslint-plugin": "^2.30.0",
		"@typescript-eslint/parser": "^2.30.0",
		"chai": "4.2.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.2",
		"sinon": "9.0.2",
		"typescript": "^3.8.3",
		"vscode-test": "^1.3.0"
	}
}
