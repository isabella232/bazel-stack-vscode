{
    ".source.starlark": {
        "workspace statement": {
            "prefix": "wor",
            "body": "workspace(name = \"${1:name}\")",
            "description": "Snippet for a workspace definition"
        },
        "visibility global (public)": {
            "prefix": "vig",
            "body": "visibility = [\"//visibility:public\"],",
            "description": "Snippet for a public visibility label attribute"
        },
        "visibility package": {
            "prefix": "vip",
            "body": "visibility = [\"//${1:path/to/package}:__pkg__\"],",
            "description": "Snippet for a package visibility label attribute"
        },
        "visibility subpackages": {
            "prefix": "vis",
            "body": "visibility = [\":__subpackages__\"],",
            "description": "Snippet for subpackage visibility label attribute"
        },
        "visibility private": {
            "prefix": "vix",
            "body": "visibility = [\"//visibility:private\"],",
            "description": "Snippet for a private visibility label attribute"
        },
        "load statement": {
            "prefix": "loa",
            "body": "load(\"@${1:WORKSPACE_NAME}//${2:PATH}:${3:FILENAME}.bzl\", \"${4:SYMBOL}\")",
            "description": "Snippet for a load statement"
        },
        "http_archive": {
            "prefix": "http",
            "body": "http_archive(\n\tname = \"${1:NAME}\",\n\turls = [\"https://github.com/${2:OWNER}/${3:REPO}/archive/${4:COMMIT}.tgz\"],\n\tstrip_prefix = \"${2:REPO}-${4:COMMIT}\",\n\tsha256 = \"${5:SHA256}\",\n)\n",
            "description": "Snippet for an http_archive rule"
        },
        "starlark rule": {
            "prefix": "rule",
            "body": "def _${1:NAME}_implementation(ctx):\n    return [DefaultInfo(\n    )]\n\n${1:NAME} = rule(\n    implementation = _${1:NAME}_implementation,\n    attrs = {\n        \"srcs\": attr.label_list(\n            allow_files = True,\n            doc = \"input source files\",\n        ),\n    },\n\texecutable = False,\n\ttest = False,\n)\n",
            "description": "Snippet for a sample bazel rule"
        },
        "starlark provider": {
            "prefix": "provider",
            "body": "${1:PROVIDER_NAME}Info = provider(\n    doc = \"Description of provider ${1:PROVIDER_NAME}\",\n    fields = {\n        \"${2:foo}\": \"Description of ${2:foo} field\",\n    },\n)\n",
            "description": "Snippet for a sample bazel provider"
        },
        "starlark genrule": {
            "prefix": "genrule",
            "body": "genrule(\n\t\"\"\"\n\tCopy the file generated by //cmd/${1:name} to a file named '${1:name}' \n\t\"\"\"\n\tname = \"gen${1:name}\",\n\tsrcs = [\"//cmd/${1:name}\"],\n\touts = [\"${1:name}\"],\n\tcmd = \"cat $(SRCS) > $@\",\n\texecutable = False,\n)\n",
            "description": "Snippet for a sample bazel genrule"
        }
	}
}
