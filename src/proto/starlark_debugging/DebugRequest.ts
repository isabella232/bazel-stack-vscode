// Original file: proto/starlark_debugging.proto

import type { SetBreakpointsRequest as _starlark_debugging_SetBreakpointsRequest, SetBreakpointsRequest__Output as _starlark_debugging_SetBreakpointsRequest__Output } from '../starlark_debugging/SetBreakpointsRequest';
import type { ContinueExecutionRequest as _starlark_debugging_ContinueExecutionRequest, ContinueExecutionRequest__Output as _starlark_debugging_ContinueExecutionRequest__Output } from '../starlark_debugging/ContinueExecutionRequest';
import type { EvaluateRequest as _starlark_debugging_EvaluateRequest, EvaluateRequest__Output as _starlark_debugging_EvaluateRequest__Output } from '../starlark_debugging/EvaluateRequest';
import type { ListFramesRequest as _starlark_debugging_ListFramesRequest, ListFramesRequest__Output as _starlark_debugging_ListFramesRequest__Output } from '../starlark_debugging/ListFramesRequest';
import type { StartDebuggingRequest as _starlark_debugging_StartDebuggingRequest, StartDebuggingRequest__Output as _starlark_debugging_StartDebuggingRequest__Output } from '../starlark_debugging/StartDebuggingRequest';
import type { PauseThreadRequest as _starlark_debugging_PauseThreadRequest, PauseThreadRequest__Output as _starlark_debugging_PauseThreadRequest__Output } from '../starlark_debugging/PauseThreadRequest';
import type { GetChildrenRequest as _starlark_debugging_GetChildrenRequest, GetChildrenRequest__Output as _starlark_debugging_GetChildrenRequest__Output } from '../starlark_debugging/GetChildrenRequest';
import type { Long } from '@grpc/proto-loader';

/**
 * A request sent by the debug client to the debug server.
 */
export interface DebugRequest {
  /**
   * A number (intended to be sequentially generated by the client) that
   * identifies the request. The response sent by the server will contain the
   * same sequence number so that the client can synchronize its activity if
   * desired.
   */
  'sequenceNumber'?: (number | string | Long);
  'setBreakpoints'?: (_starlark_debugging_SetBreakpointsRequest);
  'continueExecution'?: (_starlark_debugging_ContinueExecutionRequest);
  'evaluate'?: (_starlark_debugging_EvaluateRequest);
  'listFrames'?: (_starlark_debugging_ListFramesRequest);
  'startDebugging'?: (_starlark_debugging_StartDebuggingRequest);
  'pauseThread'?: (_starlark_debugging_PauseThreadRequest);
  'getChildren'?: (_starlark_debugging_GetChildrenRequest);
  /**
   * The payload describes the type of the request and its arguments, if any.
   */
  'payload'?: "setBreakpoints"|"continueExecution"|"evaluate"|"listFrames"|"startDebugging"|"pauseThread"|"getChildren";
}

/**
 * A request sent by the debug client to the debug server.
 */
export interface DebugRequest__Output {
  /**
   * A number (intended to be sequentially generated by the client) that
   * identifies the request. The response sent by the server will contain the
   * same sequence number so that the client can synchronize its activity if
   * desired.
   */
  'sequenceNumber': (Long);
  'setBreakpoints'?: (_starlark_debugging_SetBreakpointsRequest__Output);
  'continueExecution'?: (_starlark_debugging_ContinueExecutionRequest__Output);
  'evaluate'?: (_starlark_debugging_EvaluateRequest__Output);
  'listFrames'?: (_starlark_debugging_ListFramesRequest__Output);
  'startDebugging'?: (_starlark_debugging_StartDebuggingRequest__Output);
  'pauseThread'?: (_starlark_debugging_PauseThreadRequest__Output);
  'getChildren'?: (_starlark_debugging_GetChildrenRequest__Output);
  /**
   * The payload describes the type of the request and its arguments, if any.
   */
  'payload': "setBreakpoints"|"continueExecution"|"evaluate"|"listFrames"|"startDebugging"|"pauseThread"|"getChildren";
}
